name: Auto Publish to PyPI

on:
  push:
    branches: [main]

jobs:
  build-and-publish:
    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Debug project structure
      run: |
        echo "=== Project Structure ==="
        ls -la
        echo "=== TOML Content ==="
        cat pyproject.toml
        echo "=== __init__.py Content ==="
        cat encrypt_tools_library/__init__.py || { echo "ERROR: __init__.py missing"; exit 1; }
        echo "=== Version Check ==="
        grep "__version__" encrypt_tools_library/__init__.py || { echo "ERROR: __version__ not found"; exit 1; }

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build setuptools>=61.0 wheel twine check-wheel-contents

    - name: Clean build artifacts
      run: |
        echo "=== Cleaning ==="
        rm -rf dist/ build/ *.egg-info/ .eggs/
        find . -name '__pycache__' -exec rm -rf {} +

    - name: Build package with enhanced validation
      run: |
        echo "=== Building Package ==="
        python -m build --no-isolation --verbose 2>&1 | tee build.log
        
        echo "=== Verifying Artifacts ==="
        ls -l dist/
        unzip -t dist/*.whl || { echo "ERROR: Wheel file corrupted"; exit 1; }
        
        echo "=== Extracting Metadata ==="
        METADATA_FILE=$(unzip -l dist/*.whl | grep -oE '[^ ]*dist-info/METADATA')
        unzip -p dist/*.whl "$METADATA_FILE" > extracted_metadata.txt
        echo "=== METADATA CONTENT ==="
        cat extracted_metadata.txt
        
        echo "=== Validating Critical Fields ==="
        grep -q "Name: encrypt_tools_library" extracted_metadata.txt || { echo "ERROR: Name field missing"; exit 1; }
        grep -q "Version: " extracted_metadata.txt || { echo "ERROR: Version field missing"; exit 1; }
        
        echo "=== Wheel Contents ==="
        unzip -l dist/*.whl

    - name: Install and test package
      run: |
        echo "=== Installing Package ==="
        pip install --force-reinstall dist/*.whl
        echo "=== Installed Version ==="
        python -c "from encrypt_tools_library import __version__; print(f'Package version: {__version__}')"
        echo "=== Package Location ==="
        python -c "import encrypt_tools_library; print(encrypt_tools_library.__file__)"

    - name: Get version
      id: get_version
      run: |
        VERSION=$(python -c "from importlib.metadata import version; print(version('encrypt_tools_library'))")
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create Git tag
      if: success()
      uses: rickstaa/action-create-tag@v1
      with:
        tag: v${{ steps.get_version.outputs.version }}
        message: "Release v${{ steps.get_version.outputs.version }}"

    - name: Publish to PyPI
      if: success()
      uses: pypa/gh-action-pypi-publish@v1.10.0
      with:
        skip-existing: true
        verbose: true